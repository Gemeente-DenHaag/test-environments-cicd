name: Test cicd

on:
  push:
    branches:
      - 'feature/**'
      - 'bugfix/**'
      - develop
      - 'release/**'
      - 'hotfix/**'
      - main
    tags:
       - 'v*'
  pull_request:
    branches:
      - main
  release:
    types:
      - published
      - unpublished
      - created
      - edited
      - deleted
      - prereleased
      - released

env:
  PUSH_AND_DEPLOY: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' }}
  GITHUB_CONTEXT: ${{ toJSON(github) }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Check build step running'
        run: echo build
      
      - name: Generate docker tag ID
        id: prep
        run: |
            branch=${GITHUB_REF##*/}
            sha=${GITHUB_SHA::8}
            ts=$(date +%s)
            echo "::set-output name=BUILD_ID::${branch}-${sha}-${ts}"
      
      - name: 'Docker meta'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: testserver/zgw/klantportaal
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=sha
            ${{ steps.prep.outputs.BUILD_ID }}
      
      - name: 'Echo github context'
        run: |
          echo 'json ${{ fromJSON(steps.meta.outputs.json).tags }}'
          BLAAT=${{ join(fromJSON(steps.meta.outputs.json).tags) }}
          echo {$BLAAT}
          DEZEPORT=${{fromJson(steps.meta.outputs.json).tags}}
          echo $DEZEPORT
          echo "$GITHUB_CONTEXT"

  deploy-to-test:
    if: github.ref_name == 'develop' || contains(github.ref, 'bugfix/')
    runs-on: ubuntu-latest
    needs: build
    environment: test
    steps:
      - name: 'Check deploy to test step running'
        run: echo deploy to test

  deploy-to-acc:
    if: contains(github.ref, 'release/') || contains(github.ref, 'hotfix/')
    runs-on: ubuntu-latest
    needs: build
    environment: acc
    steps:
      - name: 'Check deploy to acc step running'
        run: echo deploy to acc

  deploy-to-prod:
    if: contains(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: deploy-to-acc
    environment: prod
    steps:
      - name: 'Check deploy to prod step running'
        run: echo deploy to prod
